App\Entity\Customer\Customer:
    attributes:
        validation_groups: ["Default", "sylius"]
        pagination_enabled: false
        denormalization_context:
            groups: ["customer:write", "user:write"]
        normalization_context:
            groups:
                - "customer:read"
                - "user:read"
    collectionOperations:
        post:
            messenger: input
            input: App\Message\RegisterAppUser
            output: false
            openapi_context:
                summary: Registers an app user
        reset_password_request:
            messenger: input
            input: App\Message\ResetPasswordRequest
            output: false
            method: POST
            path: /request_password
            openapi_context:
                summary: Request a new password
        reset_password:
            messenger: input
            input: App\Message\ResetPassword
            output: false
            method: POST
            path: /reset_password/{token}
            openapi_context:
                summary: Reset password
    itemOperations:
        get:
            security: 'is_granted("ROLE_USER") and object.getUser() == user and object == user.getCustomer()'
        put:
            security: 'is_granted("ROLE_USER") and object.getUser() == user and object == user.getCustomer()'
        change_password:
            messenger: input
            input: App\Message\ChangeAppUserPassword
            output: false
            method: PUT
            path: customers/{id}/password
            security: 'is_granted("ROLE_USER")'
            denormalization_context:
                groups: [ "customer:password:write" ]
            openapi_context:
                summary: Change password for logged in customer
