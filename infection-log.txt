Escaped mutants:
================


1) /home/loic/www/others/symfony-starter/src/Entity/AppUser.php:51    [M] This

--- Original
+++ New
@@ @@
     public function setCustomer($customer)
     {
         $this->customer = $customer;
-        return $this;
+        return null;
     }
     /**
      * @param Customer $customer


2) /home/loic/www/others/symfony-starter/src/Entity/Customer.php:54    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         if ($this->user !== $user) {
             $this->user = $user;
-            $this->assignCustomer($user);
+            
         }
         return $this;
     }


3) /home/loic/www/others/symfony-starter/src/Entity/Customer.php:57    [M] This

--- Original
+++ New
@@ @@
             $this->user = $user;
             $this->assignCustomer($user);
         }
-        return $this;
+        return null;
     }
     /**
      * @param AppUser|null $user


4) /home/loic/www/others/symfony-starter/src/Entity/Customer.php:63    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
     /**
      * @param AppUser|null $user
      */
-    protected function assignCustomer($user = null)
+    private function assignCustomer($user = null)
     {
         if (null !== $user) {
             $user->setCustomer($this);


5) /home/loic/www/others/symfony-starter/src/Entity/Customer.php:65    [M] NotIdentical

--- Original
+++ New
@@ @@
      */
     protected function assignCustomer($user = null)
     {
-        if (null !== $user) {
+        if (null === $user) {
             $user->setCustomer($this);
         }
     }
 }

6) /home/loic/www/others/symfony-starter/src/Entity/Customer.php:66    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected function assignCustomer($user = null)
     {
         if (null !== $user) {
-            $user->setCustomer($this);
+            
         }
     }
 }

Timed Out mutants:
==================

Not Covered mutants:
====================


1) /home/loic/www/others/symfony-starter/src/Context/CustomerContext.php:52    [M] Identical

--- Original
+++ New
@@ @@
      */
     public function getCustomer() : ?CustomerInterface
     {
-        if (null === ($token = $this->tokenStorage->getToken())) {
+        if (null !== ($token = $this->tokenStorage->getToken())) {
             return null;
         }
         if ($this->authorizationChecker->isGranted('IS_AUTHENTICATED_REMEMBERED') && $token->getUser() instanceof UserInterface) {


2) /home/loic/www/others/symfony-starter/src/Context/CustomerContext.php:56    [M] LogicalAnd

--- Original
+++ New
@@ @@
         if (null === ($token = $this->tokenStorage->getToken())) {
             return null;
         }
-        if ($this->authorizationChecker->isGranted('IS_AUTHENTICATED_REMEMBERED') && $token->getUser() instanceof UserInterface) {
+        if ($this->authorizationChecker->isGranted('IS_AUTHENTICATED_REMEMBERED') || $token->getUser() instanceof UserInterface) {
             return $token->getUser()->getCustomer();
         }
         return null;
     }

3) /home/loic/www/others/symfony-starter/src/Entity/AdminUser.php:46    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function __construct()
     {
-        parent::__construct();
+        
         $this->roles = [self::DEFAULT_ADMIN_ROLE];
     }
     /**


4) /home/loic/www/others/symfony-starter/src/Entity/AdminUser.php:54    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return string
      */
-    public function getLastName()
+    protected function getLastName()
     {
         return $this->lastName;
     }


5) /home/loic/www/others/symfony-starter/src/Entity/AdminUser.php:64    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return $this
      */
-    public function setLastName($lastName)
+    protected function setLastName($lastName)
     {
         $this->lastName = $lastName;
         return $this;


6) /home/loic/www/others/symfony-starter/src/Entity/AdminUser.php:68    [M] This

--- Original
+++ New
@@ @@
     public function setLastName($lastName)
     {
         $this->lastName = $lastName;
-        return $this;
+        return null;
     }
     /**
      * @return string


7) /home/loic/www/others/symfony-starter/src/Entity/AdminUser.php:74    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return string
      */
-    public function getFirstName()
+    protected function getFirstName()
     {
         return $this->firstName;
     }


8) /home/loic/www/others/symfony-starter/src/Entity/AdminUser.php:84    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return $this
      */
-    public function setFirstName($firstName)
+    protected function setFirstName($firstName)
     {
         $this->firstName = $firstName;
         return $this;
     }

9) /home/loic/www/others/symfony-starter/src/Entity/AdminUser.php:88    [M] This

--- Original
+++ New
@@ @@
     public function setFirstName($firstName)
     {
         $this->firstName = $firstName;
-        return $this;
+        return null;
     }
 }


10) /home/loic/www/others/symfony-starter/src/Entity/AppUser.php:57    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
     /**
      * @param Customer $customer
      */
-    protected function assignUser(Customer $customer = null)
+    private function assignUser(Customer $customer = null)
     {
         if (null !== $customer) {
             $customer->setUser($this);


11) /home/loic/www/others/symfony-starter/src/Entity/AppUser.php:59    [M] NotIdentical

--- Original
+++ New
@@ @@
      */
     protected function assignUser(Customer $customer = null)
     {
-        if (null !== $customer) {
+        if (null === $customer) {
             $customer->setUser($this);
         }
     }
 }

12) /home/loic/www/others/symfony-starter/src/Entity/AppUser.php:60    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected function assignUser(Customer $customer = null)
     {
         if (null !== $customer) {
-            $customer->setUser($this);
+            
         }
     }
 }


13) /home/loic/www/others/symfony-starter/src/Entity/IdentifiableTrait.php:37    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return int
      */
-    public function getId()
+    protected function getId()
     {
         return $this->id;
     }
 }

14) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:40    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param LifecycleEventArgs $event
      */
-    public function canonicalize(LifecycleEventArgs $event)
+    protected function canonicalize(LifecycleEventArgs $event)
     {
         $item = $event->getEntity();
         if ($item instanceof CustomerInterface) {


15) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:45    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $item = $event->getEntity();
         if ($item instanceof CustomerInterface) {
-            $item->setEmailCanonical($this->canonicalizer->canonicalize($item->getEmail()));
+            
         } elseif ($item instanceof UserInterface) {
             $item->setUsernameCanonical($this->canonicalizer->canonicalize($item->getUsername()));
             $item->setEmailCanonical($this->canonicalizer->canonicalize($item->getEmail()));


16) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:47    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if ($item instanceof CustomerInterface) {
             $item->setEmailCanonical($this->canonicalizer->canonicalize($item->getEmail()));
         } elseif ($item instanceof UserInterface) {
-            $item->setUsernameCanonical($this->canonicalizer->canonicalize($item->getUsername()));
+            
             $item->setEmailCanonical($this->canonicalizer->canonicalize($item->getEmail()));
         }
     }


17) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:48    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $item->setEmailCanonical($this->canonicalizer->canonicalize($item->getEmail()));
         } elseif ($item instanceof UserInterface) {
             $item->setUsernameCanonical($this->canonicalizer->canonicalize($item->getUsername()));
-            $item->setEmailCanonical($this->canonicalizer->canonicalize($item->getEmail()));
+            
         }
     }
     /**


18) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:55    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param LifecycleEventArgs $event
      */
-    public function prePersist(LifecycleEventArgs $event)
+    protected function prePersist(LifecycleEventArgs $event)
     {
         $this->canonicalize($event);
     }


19) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:57    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function prePersist(LifecycleEventArgs $event)
     {
-        $this->canonicalize($event);
+        
     }
     /**
      * @param LifecycleEventArgs $event


20) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:63    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param LifecycleEventArgs $event
      */
-    public function preUpdate(LifecycleEventArgs $event)
+    protected function preUpdate(LifecycleEventArgs $event)
     {
         $this->canonicalize($event);
     }
 }

21) /home/loic/www/others/symfony-starter/src/EventListener/CanonicalizerListener.php:65    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function preUpdate(LifecycleEventArgs $event)
     {
-        $this->canonicalize($event);
+        
     }
 }


22) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:31    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param OnFlushEventArgs $onFlushEventArgs
      */
-    public function onFlush(OnFlushEventArgs $onFlushEventArgs)
+    protected function onFlush(OnFlushEventArgs $onFlushEventArgs)
     {
         $entityManager = $onFlushEventArgs->getEntityManager();
         $unitOfWork = $entityManager->getUnitOfWork();


23) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $entityManager = $onFlushEventArgs->getEntityManager();
         $unitOfWork = $entityManager->getUnitOfWork();
-        $this->processEntities($unitOfWork->getScheduledEntityInsertions(), $entityManager, $unitOfWork);
+        
         $this->processEntities($unitOfWork->getScheduledEntityUpdates(), $entityManager, $unitOfWork);
     }
     /**


24) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $entityManager = $onFlushEventArgs->getEntityManager();
         $unitOfWork = $entityManager->getUnitOfWork();
         $this->processEntities($unitOfWork->getScheduledEntityInsertions(), $entityManager, $unitOfWork);
-        $this->processEntities($unitOfWork->getScheduledEntityUpdates(), $entityManager, $unitOfWork);
+        
     }
     /**
      * @param array                  $entities


25) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:46    [M] Foreach_

--- Original
+++ New
@@ @@
      */
     private function processEntities($entities, EntityManagerInterface $entityManager, UnitOfWork $unitOfWork)
     {
-        foreach ($entities as $customer) {
+        foreach (array() as $customer) {
             if (!$customer instanceof CustomerInterface) {
                 continue;
             }


26) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:47    [M] LogicalNot

--- Original
+++ New
@@ @@
     private function processEntities($entities, EntityManagerInterface $entityManager, UnitOfWork $unitOfWork)
     {
         foreach ($entities as $customer) {
-            if (!$customer instanceof CustomerInterface) {
+            if ($customer instanceof CustomerInterface) {
                 continue;
             }
             /** @var UserInterface $user */


27) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:48    [M] Continue_

--- Original
+++ New
@@ @@
     {
         foreach ($entities as $customer) {
             if (!$customer instanceof CustomerInterface) {
-                continue;
+                break;
             }
             /** @var UserInterface $user */
             $user = $customer->getUser();


28) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:54    [M] Identical

--- Original
+++ New
@@ @@
             }
             /** @var UserInterface $user */
             $user = $customer->getUser();
-            if (null === $user) {
+            if (null !== $user) {
                 continue;
             }
             if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {


29) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:55    [M] Continue_

--- Original
+++ New
@@ @@
             /** @var UserInterface $user */
             $user = $customer->getUser();
             if (null === $user) {
-                continue;
+                break;
             }
             if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
                 continue;


30) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:58    [M] Identical

--- Original
+++ New
@@ @@
             if (null === $user) {
                 continue;
             }
-            if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
+            if ($customer->getEmail() !== $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
                 continue;
             }
             $user->setUsername($customer->getEmail());


31) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:58    [M] Identical

--- Original
+++ New
@@ @@
             if (null === $user) {
                 continue;
             }
-            if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
+            if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() !== $user->getUsernameCanonical()) {
                 continue;
             }
             $user->setUsername($customer->getEmail());


32) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:58    [M] LogicalAnd

--- Original
+++ New
@@ @@
             if (null === $user) {
                 continue;
             }
-            if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
+            if ($customer->getEmail() === $user->getUsername() || $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
                 continue;
             }
             $user->setUsername($customer->getEmail());


33) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:59    [M] Continue_

--- Original
+++ New
@@ @@
                 continue;
             }
             if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
-                continue;
+                break;
             }
             $user->setUsername($customer->getEmail());
             $user->setUsernameCanonical($customer->getEmailCanonical());


34) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:62    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             if ($customer->getEmail() === $user->getUsername() && $customer->getEmailCanonical() === $user->getUsernameCanonical()) {
                 continue;
             }
-            $user->setUsername($customer->getEmail());
+            
             $user->setUsernameCanonical($customer->getEmailCanonical());
             /** @var ClassMetadata $userMetadata */
             $userMetadata = $entityManager->getClassMetadata(get_class($user));


35) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:63    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 continue;
             }
             $user->setUsername($customer->getEmail());
-            $user->setUsernameCanonical($customer->getEmailCanonical());
+            
             /** @var ClassMetadata $userMetadata */
             $userMetadata = $entityManager->getClassMetadata(get_class($user));
             $unitOfWork->recomputeSingleEntityChangeSet($userMetadata, $user);


36) /home/loic/www/others/symfony-starter/src/EventListener/DefaultUsernameORMListener.php:67    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $user->setUsernameCanonical($customer->getEmailCanonical());
             /** @var ClassMetadata $userMetadata */
             $userMetadata = $entityManager->getClassMetadata(get_class($user));
-            $unitOfWork->recomputeSingleEntityChangeSet($userMetadata, $user);
+            
         }
     }
 }


37) /home/loic/www/others/symfony-starter/src/EventListener/PasswordUpdaterListener.php:28    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param GenericEvent $event
      */
-    public function customerUpdateEvent(GenericEvent $event)
+    protected function customerUpdateEvent(GenericEvent $event)
     {
         $customer = $event->getSubject();
         if (!$customer instanceof CustomerInterface) {


38) /home/loic/www/others/symfony-starter/src/EventListener/PasswordUpdaterListener.php:32    [M] LogicalNot

--- Original
+++ New
@@ @@
     public function customerUpdateEvent(GenericEvent $event)
     {
         $customer = $event->getSubject();
-        if (!$customer instanceof CustomerInterface) {
+        if ($customer instanceof CustomerInterface) {
             throw new UnexpectedTypeException($customer, CustomerInterface::class);
         }
         if (null !== ($user = $customer->getUser())) {


39) /home/loic/www/others/symfony-starter/src/EventListener/PasswordUpdaterListener.php:33    [M] Throw_

--- Original
+++ New
@@ @@
     {
         $customer = $event->getSubject();
         if (!$customer instanceof CustomerInterface) {
-            throw new UnexpectedTypeException($customer, CustomerInterface::class);
+            new UnexpectedTypeException($customer, CustomerInterface::class);
         }
         if (null !== ($user = $customer->getUser())) {
             $this->updatePassword($user);


40) /home/loic/www/others/symfony-starter/src/EventListener/PasswordUpdaterListener.php:39    [M] NotIdentical

--- Original
+++ New
@@ @@
         if (!$customer instanceof CustomerInterface) {
             throw new UnexpectedTypeException($customer, CustomerInterface::class);
         }
-        if (null !== ($user = $customer->getUser())) {
+        if (null === ($user = $customer->getUser())) {
             $this->updatePassword($user);
         }
     }
 }

41) /home/loic/www/others/symfony-starter/src/EventListener/PasswordUpdaterListener.php:40    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             throw new UnexpectedTypeException($customer, CustomerInterface::class);
         }
         if (null !== ($user = $customer->getUser())) {
-            $this->updatePassword($user);
+            
         }
     }
 }


42) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:55    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param FormEvent $event
      */
-    public function preSetData(FormEvent $event)
+    protected function preSetData(FormEvent $event)
     {
         $form = $event->getForm();
         $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);


43) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:58    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function preSetData(FormEvent $event)
     {
         $form = $event->getForm();
-        $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);
+        
         $form->add('createUser', CheckboxType::class, ['label' => 'app.ui.create_user', 'required' => false, 'mapped' => false]);
     }
     /**


44) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:59    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $form = $event->getForm();
         $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);
-        $form->add('createUser', CheckboxType::class, ['label' => 'app.ui.create_user', 'required' => false, 'mapped' => false]);
+        
     }
     /**
      * @param FormEvent $event


45) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:61    [M] FalseValue

--- Original
+++ New
@@ @@
     {
         $form = $event->getForm();
         $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);
-        $form->add('createUser', CheckboxType::class, ['label' => 'app.ui.create_user', 'required' => false, 'mapped' => false]);
+        $form->add('createUser', CheckboxType::class, ['label' => 'app.ui.create_user', 'required' => true, 'mapped' => false]);
     }
     /**
      * @param FormEvent $event


46) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:62    [M] FalseValue

--- Original
+++ New
@@ @@
     {
         $form = $event->getForm();
         $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);
-        $form->add('createUser', CheckboxType::class, ['label' => 'app.ui.create_user', 'required' => false, 'mapped' => false]);
+        $form->add('createUser', CheckboxType::class, ['label' => 'app.ui.create_user', 'required' => false, 'mapped' => true]);
     }
     /**
      * @param FormEvent $event


47) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:69    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @param FormEvent $event
      */
-    public function submit(FormEvent $event)
+    protected function submit(FormEvent $event)
     {
         $data = $event->getData();
         $form = $event->getForm();


48) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:74    [M] Identical

--- Original
+++ New
@@ @@
     {
         $data = $event->getData();
         $form = $event->getForm();
-        if (null === $form->get('createUser')->getViewData()) {
+        if (null !== $form->get('createUser')->getViewData()) {
             Assert::isInstanceOf($data, UserAwareInterface::class);
             $data->setUser(null);
             $event->setData($data);


49) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:75    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $data = $event->getData();
         $form = $event->getForm();
         if (null === $form->get('createUser')->getViewData()) {
-            Assert::isInstanceOf($data, UserAwareInterface::class);
+            
             $data->setUser(null);
             $event->setData($data);
             $form->remove('user');


50) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:77    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $form = $event->getForm();
         if (null === $form->get('createUser')->getViewData()) {
             Assert::isInstanceOf($data, UserAwareInterface::class);
-            $data->setUser(null);
+            
             $event->setData($data);
             $form->remove('user');
             $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);


51) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:78    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if (null === $form->get('createUser')->getViewData()) {
             Assert::isInstanceOf($data, UserAwareInterface::class);
             $data->setUser(null);
-            $event->setData($data);
+            
             $form->remove('user');
             $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);
         }
     }

52) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:80    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             Assert::isInstanceOf($data, UserAwareInterface::class);
             $data->setUser(null);
             $event->setData($data);
-            $form->remove('user');
+            
             $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);
         }
     }
 }

53) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/AddUserFormSubscriber.php:81    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $data->setUser(null);
             $event->setData($data);
             $form->remove('user');
-            $form->add('user', $this->entryType, ['constraints' => [new Valid()]]);
+            
         }
     }
 }


54) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:52    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function preSubmit(FormEvent $event)
+    protected function preSubmit(FormEvent $event)
     {
         $rawData = $event->getData();
         $form = $event->getForm();


55) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:58    [M] LogicalNot

--- Original
+++ New
@@ @@
         $rawData = $event->getData();
         $form = $event->getForm();
         $data = $form->getData();
-        if (!$data instanceof CustomerInterface) {
+        if ($data instanceof CustomerInterface) {
             throw new UnexpectedTypeException($data, CustomerInterface::class);
         }
         // if email is not filled in, go on


56) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:59    [M] Throw_

--- Original
+++ New
@@ @@
         $form = $event->getForm();
         $data = $form->getData();
         if (!$data instanceof CustomerInterface) {
-            throw new UnexpectedTypeException($data, CustomerInterface::class);
+            new UnexpectedTypeException($data, CustomerInterface::class);
         }
         // if email is not filled in, go on
         if (!isset($rawData['email']) || empty($rawData['email'])) {


57) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:63    [M] LogicalOr

--- Original
+++ New
@@ @@
             throw new UnexpectedTypeException($data, CustomerInterface::class);
         }
         // if email is not filled in, go on
-        if (!isset($rawData['email']) || empty($rawData['email'])) {
+        if (!isset($rawData['email']) && empty($rawData['email'])) {
             return;
         }
         $existingCustomer = $this->customerRepository->findOneBy(['email' => $rawData['email']]);


58) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:63    [M] LogicalNot

--- Original
+++ New
@@ @@
             throw new UnexpectedTypeException($data, CustomerInterface::class);
         }
         // if email is not filled in, go on
-        if (!isset($rawData['email']) || empty($rawData['email'])) {
+        if (isset($rawData['email']) || empty($rawData['email'])) {
             return;
         }
         $existingCustomer = $this->customerRepository->findOneBy(['email' => $rawData['email']]);


59) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:67    [M] LogicalOr

--- Original
+++ New
@@ @@
             return;
         }
         $existingCustomer = $this->customerRepository->findOneBy(['email' => $rawData['email']]);
-        if (null === $existingCustomer || null !== $existingCustomer->getUser()) {
+        if (null === $existingCustomer && null !== $existingCustomer->getUser()) {
             return;
         }
         $existingCustomer->setUser($data->getUser());


60) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:67    [M] NotIdentical

--- Original
+++ New
@@ @@
             return;
         }
         $existingCustomer = $this->customerRepository->findOneBy(['email' => $rawData['email']]);
-        if (null === $existingCustomer || null !== $existingCustomer->getUser()) {
+        if (null === $existingCustomer || null === $existingCustomer->getUser()) {
             return;
         }
         $existingCustomer->setUser($data->getUser());


61) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:67    [M] Identical

--- Original
+++ New
@@ @@
             return;
         }
         $existingCustomer = $this->customerRepository->findOneBy(['email' => $rawData['email']]);
-        if (null === $existingCustomer || null !== $existingCustomer->getUser()) {
+        if (null !== $existingCustomer || null !== $existingCustomer->getUser()) {
             return;
         }
         $existingCustomer->setUser($data->getUser());


62) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:71    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         if (null === $existingCustomer || null !== $existingCustomer->getUser()) {
             return;
         }
-        $existingCustomer->setUser($data->getUser());
+        
         $form->setData($existingCustomer);
     }
 }


63) /home/loic/www/others/symfony-starter/src/Form/EventSubscriber/CustomerRegistrationFormSubscriber.php:72    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             return;
         }
         $existingCustomer->setUser($data->getUser());
-        $form->setData($existingCustomer);
+        
     }
 }


64) /home/loic/www/others/symfony-starter/src/Form/Extension/CustomerTypeExtension.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
-        $builder->addEventSubscriber(new AddUserFormSubscriber(AppUserType::class));
+        
     }
     /**
      * {@inheritdoc}


65) /home/loic/www/others/symfony-starter/src/Form/Extension/DateTypeExtension.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver)
     {
-        $resolver->setDefaults(['widget' => 'single_text', 'html5' => false, 'format' => 'dd/MM/yyyy']);
+        
     }
     /**
      * {@inheritdoc}


66) /home/loic/www/others/symfony-starter/src/Form/Extension/DateTypeExtension.php:31    [M] FalseValue

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver)
     {
-        $resolver->setDefaults(['widget' => 'single_text', 'html5' => false, 'format' => 'dd/MM/yyyy']);
+        $resolver->setDefaults(['widget' => 'single_text', 'html5' => true, 'format' => 'dd/MM/yyyy']);
     }
     /**
      * {@inheritdoc}


67) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
-        parent::buildForm($builder, $options);
+        
         $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
     }
     /**


68) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:33    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         parent::buildForm($builder, $options);
-        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
+        
     }
     /**
      * {@inheritdoc}


69) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:46    [M] FalseValue

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         parent::buildForm($builder, $options);
-        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
+        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => true, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
     }
     /**
      * {@inheritdoc}


70) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:47    [M] FalseValue

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         parent::buildForm($builder, $options);
-        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
+        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => true])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
     }
     /**
      * {@inheritdoc}


71) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:51    [M] FalseValue

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         parent::buildForm($builder, $options);
-        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
+        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => true, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
     }
     /**
      * {@inheritdoc}


72) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:52    [M] FalseValue

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         parent::buildForm($builder, $options);
-        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
+        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => true])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
     }
     /**
      * {@inheritdoc}


73) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:56    [M] FalseValue

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         parent::buildForm($builder, $options);
-        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
+        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => true, 'required' => false]);
     }
     /**
      * {@inheritdoc}


74) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:57    [M] FalseValue

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         parent::buildForm($builder, $options);
-        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => false]);
+        $builder->add('street', TextType::class, ['label' => 'sylius.ui.street'])->add('postcode', TextType::class, ['label' => 'sylius.ui.postcode'])->add('city', TextType::class, ['label' => 'sylius.ui.city'])->add('birthday', BirthdayType::class, ['label' => 'Date de naissance', 'widget' => 'choice', 'mapped' => false, 'required' => false])->add('date', DatePickerType::class, ['label' => 'Date picker', 'mapped' => false, 'required' => false])->add('dateTime', DateTimePickerType::class, ['label' => 'Date picker avec heure', 'mapped' => false, 'required' => true]);
     }
     /**
      * {@inheritdoc}


75) /home/loic/www/others/symfony-starter/src/Form/Type/AddressType.php:67    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver)
     {
-        $resolver->setDefaults(['data_class' => Address::class]);
+        
     }
     /**
      * {@inheritdoc}


76) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerRegistrationType.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options = [])
     {
-        parent::buildForm($builder, $options);
+        
         $builder->add('firstName', TextType::class, ['label' => 'sylius.form.customer.first_name'])->add('lastName', TextType::class, ['label' => 'sylius.form.customer.last_name'])->add('phoneNumber', TextType::class, ['required' => false, 'label' => 'sylius.form.customer.phone_number']);
     }
     /**


77) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerRegistrationType.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options = [])
     {
         parent::buildForm($builder, $options);
-        $builder->add('firstName', TextType::class, ['label' => 'sylius.form.customer.first_name'])->add('lastName', TextType::class, ['label' => 'sylius.form.customer.last_name'])->add('phoneNumber', TextType::class, ['required' => false, 'label' => 'sylius.form.customer.phone_number']);
+        
     }
     /**
      * {@inheritdoc}


78) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerRegistrationType.php:38    [M] FalseValue

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options = [])
     {
         parent::buildForm($builder, $options);
-        $builder->add('firstName', TextType::class, ['label' => 'sylius.form.customer.first_name'])->add('lastName', TextType::class, ['label' => 'sylius.form.customer.last_name'])->add('phoneNumber', TextType::class, ['required' => false, 'label' => 'sylius.form.customer.phone_number']);
+        $builder->add('firstName', TextType::class, ['label' => 'sylius.form.customer.first_name'])->add('lastName', TextType::class, ['label' => 'sylius.form.customer.last_name'])->add('phoneNumber', TextType::class, ['required' => true, 'label' => 'sylius.form.customer.phone_number']);
     }
     /**
      * {@inheritdoc}


79) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerSimpleRegistrationType.php:40    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function __construct($dataClass, array $validationGroups, RepositoryInterface $customerRepository)
     {
-        parent::__construct($dataClass, $validationGroups);
+        
         $this->customerRepository = $customerRepository;
     }
     /**


80) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerSimpleRegistrationType.php:50    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options = [])
     {
-        $builder->add('email', EmailType::class, ['label' => 'sylius.form.customer.email'])->add('user', AppUserRegistrationType::class, ['label' => false, 'constraints' => [new Valid()]])->addEventSubscriber(new CustomerRegistrationFormSubscriber($this->customerRepository))->setDataLocked(false);
+        
     }
     /**
      * {@inheritdoc}


81) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerSimpleRegistrationType.php:55    [M] FalseValue

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options = [])
     {
-        $builder->add('email', EmailType::class, ['label' => 'sylius.form.customer.email'])->add('user', AppUserRegistrationType::class, ['label' => false, 'constraints' => [new Valid()]])->addEventSubscriber(new CustomerRegistrationFormSubscriber($this->customerRepository))->setDataLocked(false);
+        $builder->add('email', EmailType::class, ['label' => 'sylius.form.customer.email'])->add('user', AppUserRegistrationType::class, ['label' => true, 'constraints' => [new Valid()]])->addEventSubscriber(new CustomerRegistrationFormSubscriber($this->customerRepository))->setDataLocked(false);
     }
     /**
      * {@inheritdoc}


82) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerSimpleRegistrationType.php:59    [M] FalseValue

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options = [])
     {
-        $builder->add('email', EmailType::class, ['label' => 'sylius.form.customer.email'])->add('user', AppUserRegistrationType::class, ['label' => false, 'constraints' => [new Valid()]])->addEventSubscriber(new CustomerRegistrationFormSubscriber($this->customerRepository))->setDataLocked(false);
+        $builder->add('email', EmailType::class, ['label' => 'sylius.form.customer.email'])->add('user', AppUserRegistrationType::class, ['label' => false, 'constraints' => [new Valid()]])->addEventSubscriber(new CustomerRegistrationFormSubscriber($this->customerRepository))->setDataLocked(true);
     }
     /**
      * {@inheritdoc}


83) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerSimpleRegistrationType.php:68    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver) : void
     {
-        $resolver->setDefaults(['data_class' => $this->dataClass, 'validation_groups' => $this->validationGroups]);
+        
     }
     /**
      * {@inheritdoc}


84) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerSimpleRegistrationType.php:69    [M] ArrayItem

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver) : void
     {
-        $resolver->setDefaults(['data_class' => $this->dataClass, 'validation_groups' => $this->validationGroups]);
+        $resolver->setDefaults(['data_class' > $this->dataClass, 'validation_groups' => $this->validationGroups]);
     }
     /**
      * {@inheritdoc}


85) /home/loic/www/others/symfony-starter/src/Form/Type/Customer/CustomerSimpleRegistrationType.php:70    [M] ArrayItem

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver) : void
     {
-        $resolver->setDefaults(['data_class' => $this->dataClass, 'validation_groups' => $this->validationGroups]);
+        $resolver->setDefaults(['data_class' => $this->dataClass, 'validation_groups' > $this->validationGroups]);
     }
     /**
      * {@inheritdoc}


86) /home/loic/www/others/symfony-starter/src/Form/Type/DatePickerType.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver)
     {
-        parent::configureOptions($resolver);
+        
         $resolver->setDefaults(['widget' => 'single_text', 'format' => 'dd/MM/yyyy']);
     }
     /**


87) /home/loic/www/others/symfony-starter/src/Form/Type/DatePickerType.php:38    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function configureOptions(OptionsResolver $resolver)
     {
         parent::configureOptions($resolver);
-        $resolver->setDefaults(['widget' => 'single_text', 'format' => 'dd/MM/yyyy']);
+        
     }
     /**
      * {@inheritdoc}


88) /home/loic/www/others/symfony-starter/src/Form/Type/DateTimePickerType.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function configureOptions(OptionsResolver $resolver)
     {
-        parent::configureOptions($resolver);
+        
         $resolver->setDefaults(['widget' => 'single_text', 'format' => 'dd/MM/yyyy H:i']);
     }
     /**


89) /home/loic/www/others/symfony-starter/src/Form/Type/DateTimePickerType.php:38    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function configureOptions(OptionsResolver $resolver)
     {
         parent::configureOptions($resolver);
-        $resolver->setDefaults(['widget' => 'single_text', 'format' => 'dd/MM/yyyy H:i']);
+        
     }
     /**
      * {@inheritdoc}


90) /home/loic/www/others/symfony-starter/src/Form/Type/User/AdminUserType.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        parent::buildForm($builder, $options);
+        
         $builder->add('firstName', TextType::class, ['label' => 'sylius.ui.first_name'])->add('lastName', TextType::class, ['label' => 'sylius.ui.last_name']);
     }
     /**


91) /home/loic/www/others/symfony-starter/src/Form/Type/User/AdminUserType.php:30    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
         parent::buildForm($builder, $options);
-        $builder->add('firstName', TextType::class, ['label' => 'sylius.ui.first_name'])->add('lastName', TextType::class, ['label' => 'sylius.ui.last_name']);
+        
     }
     /**
      * {@inheritdoc}


92) /home/loic/www/others/symfony-starter/src/Form/Type/User/AppUserRegistrationType.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
-        $builder->add('plainPassword', RepeatedType::class, ['type' => PasswordType::class, 'first_options' => ['label' => 'sylius.form.user.password.label'], 'second_options' => ['label' => 'sylius.form.user.password.confirmation'], 'invalid_message' => 'sylius.user.plainPassword.mismatch']);
+        
     }
     /**
      * {@inheritdoc}


93) /home/loic/www/others/symfony-starter/src/Form/Type/User/AppUserType.php:27    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        parent::buildForm($builder, $options);
+        
         $builder->remove('username')->remove('email');
     }
     /**


94) /home/loic/www/others/symfony-starter/src/Form/Type/User/AppUserType.php:29    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
         parent::buildForm($builder, $options);
-        $builder->remove('username')->remove('email');
+        
     }
     /**
      * {@inheritdoc}


95) /home/loic/www/others/symfony-starter/src/Formatter/StringInflector.php:24    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return string
      */
-    public static function nameToCode($value)
+    protected static function nameToCode($value)
     {
         return str_replace([' ', '-'], '_', $value);
     }


96) /home/loic/www/others/symfony-starter/src/Formatter/StringInflector.php:26    [M] FunctionCall

--- Original
+++ New
@@ @@
      */
     public static function nameToCode($value)
     {
-        return str_replace([' ', '-'], '_', $value);
+        str_replace([' ', '-'], '_', $value);
+        return null;
     }
     /**
      * @param string $value

97) /home/loic/www/others/symfony-starter/src/Formatter/StringInflector.php:34    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return string
      */
-    public static function nameToLowercaseCode($value)
+    protected static function nameToLowercaseCode($value)
     {
         return strtolower(self::nameToCode($value));
     }


98) /home/loic/www/others/symfony-starter/src/Formatter/StringInflector.php:36    [M] FunctionCall

--- Original
+++ New
@@ @@
      */
     public static function nameToLowercaseCode($value)
     {
-        return strtolower(self::nameToCode($value));
+        strtolower(self::nameToCode($value));
+        return null;
     }
     /**
      * @param string $value

99) /home/loic/www/others/symfony-starter/src/Formatter/StringInflector.php:44    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return string
      */
-    public static function nameToUppercaseCode($value)
+    protected static function nameToUppercaseCode($value)
     {
         return strtoupper(self::nameToCode($value));
     }


100) /home/loic/www/others/symfony-starter/src/Formatter/StringInflector.php:46    [M] FunctionCall

--- Original
+++ New
@@ @@
      */
     public static function nameToUppercaseCode($value)
     {
-        return strtoupper(self::nameToCode($value));
+        strtoupper(self::nameToCode($value));
+        return null;
     }
     private function __construct()
     {

101) /home/loic/www/others/symfony-starter/src/Kernel.php:34    [M] TrueValue

--- Original
+++ New
@@ @@
      */
     protected function getContainerBaseClass()
     {
-        if (in_array($this->getEnvironment(), ['test', 'test_cached'], true)) {
+        if (in_array($this->getEnvironment(), ['test', 'test_cached'], false)) {
             return MockerContainer::class;
         }
         return parent::getContainerBaseClass();


102) /home/loic/www/others/symfony-starter/src/Kernel.php:54    [M] Foreach_

--- Original
+++ New
@@ @@
     public function registerBundles()
     {
         $contents = (require $this->getProjectDir() . '/config/bundles.php');
-        foreach ($contents as $class => $envs) {
+        foreach (array() as $class => $envs) {
             if (isset($envs['all']) || isset($envs[$this->environment])) {
                 (yield new $class());
             }


103) /home/loic/www/others/symfony-starter/src/Kernel.php:55    [M] LogicalOr

--- Original
+++ New
@@ @@
     {
         $contents = (require $this->getProjectDir() . '/config/bundles.php');
         foreach ($contents as $class => $envs) {
-            if (isset($envs['all']) || isset($envs[$this->environment])) {
+            if (isset($envs['all']) && isset($envs[$this->environment])) {
                 (yield new $class());
             }
         }


104) /home/loic/www/others/symfony-starter/src/Kernel.php:61    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
             }
         }
     }
-    protected function configureContainer(ContainerBuilder $container, LoaderInterface $loader)
+    private function configureContainer(ContainerBuilder $container, LoaderInterface $loader)
     {
         $container->addResource(new FileResource($this->getProjectDir() . '/config/bundles.php'));
         $container->setParameter('container.dumper.inline_class_loader', true);


105) /home/loic/www/others/symfony-starter/src/Kernel.php:63    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function configureContainer(ContainerBuilder $container, LoaderInterface $loader)
     {
-        $container->addResource(new FileResource($this->getProjectDir() . '/config/bundles.php'));
+        
         $container->setParameter('container.dumper.inline_class_loader', true);
         $confDir = $this->getProjectDir() . '/config';
         $loader->load($confDir . '/{packages}/*' . self::CONFIG_EXTS, 'glob');


106) /home/loic/www/others/symfony-starter/src/Kernel.php:64    [M] TrueValue

--- Original
+++ New
@@ @@
     protected function configureContainer(ContainerBuilder $container, LoaderInterface $loader)
     {
         $container->addResource(new FileResource($this->getProjectDir() . '/config/bundles.php'));
-        $container->setParameter('container.dumper.inline_class_loader', true);
+        $container->setParameter('container.dumper.inline_class_loader', false);
         $confDir = $this->getProjectDir() . '/config';
         $loader->load($confDir . '/{packages}/*' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{packages}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, 'glob');


107) /home/loic/www/others/symfony-starter/src/Kernel.php:64    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected function configureContainer(ContainerBuilder $container, LoaderInterface $loader)
     {
         $container->addResource(new FileResource($this->getProjectDir() . '/config/bundles.php'));
-        $container->setParameter('container.dumper.inline_class_loader', true);
+        
         $confDir = $this->getProjectDir() . '/config';
         $loader->load($confDir . '/{packages}/*' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{packages}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, 'glob');


108) /home/loic/www/others/symfony-starter/src/Kernel.php:67    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $container->addResource(new FileResource($this->getProjectDir() . '/config/bundles.php'));
         $container->setParameter('container.dumper.inline_class_loader', true);
         $confDir = $this->getProjectDir() . '/config';
-        $loader->load($confDir . '/{packages}/*' . self::CONFIG_EXTS, 'glob');
+        
         $loader->load($confDir . '/{packages}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{services}' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{services}_' . $this->environment . self::CONFIG_EXTS, 'glob');


109) /home/loic/www/others/symfony-starter/src/Kernel.php:68    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $container->setParameter('container.dumper.inline_class_loader', true);
         $confDir = $this->getProjectDir() . '/config';
         $loader->load($confDir . '/{packages}/*' . self::CONFIG_EXTS, 'glob');
-        $loader->load($confDir . '/{packages}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, 'glob');
+        
         $loader->load($confDir . '/{services}' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{services}_' . $this->environment . self::CONFIG_EXTS, 'glob');
     }


110) /home/loic/www/others/symfony-starter/src/Kernel.php:69    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $confDir = $this->getProjectDir() . '/config';
         $loader->load($confDir . '/{packages}/*' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{packages}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, 'glob');
-        $loader->load($confDir . '/{services}' . self::CONFIG_EXTS, 'glob');
+        
         $loader->load($confDir . '/{services}_' . $this->environment . self::CONFIG_EXTS, 'glob');
     }
     protected function configureRoutes(RouteCollectionBuilder $routes)


111) /home/loic/www/others/symfony-starter/src/Kernel.php:70    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $loader->load($confDir . '/{packages}/*' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{packages}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{services}' . self::CONFIG_EXTS, 'glob');
-        $loader->load($confDir . '/{services}_' . $this->environment . self::CONFIG_EXTS, 'glob');
+        
     }
     protected function configureRoutes(RouteCollectionBuilder $routes)
     {


112) /home/loic/www/others/symfony-starter/src/Kernel.php:73    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
         $loader->load($confDir . '/{services}' . self::CONFIG_EXTS, 'glob');
         $loader->load($confDir . '/{services}_' . $this->environment . self::CONFIG_EXTS, 'glob');
     }
-    protected function configureRoutes(RouteCollectionBuilder $routes)
+    private function configureRoutes(RouteCollectionBuilder $routes)
     {
         $confDir = $this->getProjectDir() . '/config';
         $routes->import($confDir . '/{routes}/*' . self::CONFIG_EXTS, '/', 'glob');


113) /home/loic/www/others/symfony-starter/src/Kernel.php:77    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     protected function configureRoutes(RouteCollectionBuilder $routes)
     {
         $confDir = $this->getProjectDir() . '/config';
-        $routes->import($confDir . '/{routes}/*' . self::CONFIG_EXTS, '/', 'glob');
+        
         $routes->import($confDir . '/{routes}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, '/', 'glob');
         $routes->import($confDir . '/{routes}' . self::CONFIG_EXTS, '/', 'glob');
     }


114) /home/loic/www/others/symfony-starter/src/Kernel.php:78    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $confDir = $this->getProjectDir() . '/config';
         $routes->import($confDir . '/{routes}/*' . self::CONFIG_EXTS, '/', 'glob');
-        $routes->import($confDir . '/{routes}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, '/', 'glob');
+        
         $routes->import($confDir . '/{routes}' . self::CONFIG_EXTS, '/', 'glob');
     }
     protected function build(ContainerBuilder $container) : void


115) /home/loic/www/others/symfony-starter/src/Kernel.php:79    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $confDir = $this->getProjectDir() . '/config';
         $routes->import($confDir . '/{routes}/*' . self::CONFIG_EXTS, '/', 'glob');
         $routes->import($confDir . '/{routes}/' . $this->environment . '/**/*' . self::CONFIG_EXTS, '/', 'glob');
-        $routes->import($confDir . '/{routes}' . self::CONFIG_EXTS, '/', 'glob');
+        
     }
     protected function build(ContainerBuilder $container) : void
     {


116) /home/loic/www/others/symfony-starter/src/Kernel.php:84    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function build(ContainerBuilder $container) : void
     {
-        $container->addCompilerPass(new ServicesPass());
+        
     }
 }


117) /home/loic/www/others/symfony-starter/src/Menu/AdminMenuBuilder.php:41    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return ItemInterface
      */
-    public function createMenu(RequestStack $requestStack)
+    protected function createMenu(RequestStack $requestStack)
     {
         $menu = $this->factory->createItem('root');
         $this->addCustomerSubMenu($menu);


118) /home/loic/www/others/symfony-starter/src/Menu/AdminMenuBuilder.php:45    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function createMenu(RequestStack $requestStack)
     {
         $menu = $this->factory->createItem('root');
-        $this->addCustomerSubMenu($menu);
+        
         $this->addConfigurationSubMenu($menu);
         return $menu;
     }


119) /home/loic/www/others/symfony-starter/src/Menu/AdminMenuBuilder.php:46    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $menu = $this->factory->createItem('root');
         $this->addCustomerSubMenu($menu);
-        $this->addConfigurationSubMenu($menu);
+        
         return $menu;
     }
     /**


120) /home/loic/www/others/symfony-starter/src/Menu/AdminMenuBuilder.php:63    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private function addCustomerSubMenu(ItemInterface $menu)
     {
         $customer = $menu->addChild('customer')->setLabel('sylius.ui.customer');
-        $customer->addChild('backend_customer', ['route' => 'sylius_backend_customer_index'])->setLabel('sylius.ui.customers')->setLabelAttribute('icon', 'users');
+        
         return $customer;
     }
     /**


121) /home/loic/www/others/symfony-starter/src/Menu/AdminMenuBuilder.php:82    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private function addConfigurationSubMenu(ItemInterface $menu)
     {
         $configuration = $menu->addChild('configuration')->setLabel('sylius.ui.configuration');
-        $configuration->addChild('backend_address', ['route' => 'app_backend_address_index'])->setLabel('app.ui.addresses')->setLabelAttribute('icon', 'map');
+        
         $configuration->addChild('backend_admin_user', ['route' => 'sylius_backend_admin_user_index'])->setLabel('sylius.ui.admin_users')->setLabelAttribute('icon', 'lock');
         return $configuration;
     }
 }

122) /home/loic/www/others/symfony-starter/src/Menu/AdminMenuBuilder.php:86    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $configuration = $menu->addChild('configuration')->setLabel('sylius.ui.configuration');
         $configuration->addChild('backend_address', ['route' => 'app_backend_address_index'])->setLabel('app.ui.addresses')->setLabelAttribute('icon', 'map');
-        $configuration->addChild('backend_admin_user', ['route' => 'sylius_backend_admin_user_index'])->setLabel('sylius.ui.admin_users')->setLabelAttribute('icon', 'lock');
+        
         return $configuration;
     }
 }


123) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:61    [M] LogicalAnd

--- Original
+++ New
@@ @@
         $configurationDefinition = new Configuration();
         $configuration = Yaml::parse($resource);
         $configuration = $processor->processConfiguration($configurationDefinition, ['routing' => $configuration]);
-        if (!empty($configuration['only']) && !empty($configuration['except'])) {
+        if (!empty($configuration['only']) || !empty($configuration['except'])) {
             throw new \InvalidArgumentException('You can configure only one of "except" & "only" options.');
         }
         $routesToGenerate = ['show', 'index', 'create', 'update', 'delete', 'bulkDelete'];


124) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:61    [M] LogicalNot

--- Original
+++ New
@@ @@
         $configurationDefinition = new Configuration();
         $configuration = Yaml::parse($resource);
         $configuration = $processor->processConfiguration($configurationDefinition, ['routing' => $configuration]);
-        if (!empty($configuration['only']) && !empty($configuration['except'])) {
+        if (!empty($configuration['only']) && empty($configuration['except'])) {
             throw new \InvalidArgumentException('You can configure only one of "except" & "only" options.');
         }
         $routesToGenerate = ['show', 'index', 'create', 'update', 'delete', 'bulkDelete'];


125) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:61    [M] LogicalNot

--- Original
+++ New
@@ @@
         $configurationDefinition = new Configuration();
         $configuration = Yaml::parse($resource);
         $configuration = $processor->processConfiguration($configurationDefinition, ['routing' => $configuration]);
-        if (!empty($configuration['only']) && !empty($configuration['except'])) {
+        if (empty($configuration['only']) && !empty($configuration['except'])) {
             throw new \InvalidArgumentException('You can configure only one of "except" & "only" options.');
         }
         $routesToGenerate = ['show', 'index', 'create', 'update', 'delete', 'bulkDelete'];


126) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:62    [M] Throw_

--- Original
+++ New
@@ @@
         $configuration = Yaml::parse($resource);
         $configuration = $processor->processConfiguration($configurationDefinition, ['routing' => $configuration]);
         if (!empty($configuration['only']) && !empty($configuration['except'])) {
-            throw new \InvalidArgumentException('You can configure only one of "except" & "only" options.');
+            new \InvalidArgumentException('You can configure only one of "except" & "only" options.');
         }
         $routesToGenerate = ['show', 'index', 'create', 'update', 'delete', 'bulkDelete'];
         if (!empty($configuration['only'])) {


127) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:67    [M] LogicalNot

--- Original
+++ New
@@ @@
             throw new \InvalidArgumentException('You can configure only one of "except" & "only" options.');
         }
         $routesToGenerate = ['show', 'index', 'create', 'update', 'delete', 'bulkDelete'];
-        if (!empty($configuration['only'])) {
+        if (empty($configuration['only'])) {
             $routesToGenerate = $configuration['only'];
         }
         if (!empty($configuration['except'])) {


128) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:70    [M] LogicalNot

--- Original
+++ New
@@ @@
         if (!empty($configuration['only'])) {
             $routesToGenerate = $configuration['only'];
         }
-        if (!empty($configuration['except'])) {
+        if (empty($configuration['except'])) {
             $routesToGenerate = array_diff($routesToGenerate, $configuration['except']);
         }
         $isApi = 'sylius.resource_api' === $type;


129) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:74    [M] Identical

--- Original
+++ New
@@ @@
         if (!empty($configuration['except'])) {
             $routesToGenerate = array_diff($routesToGenerate, $configuration['except']);
         }
-        $isApi = 'sylius.resource_api' === $type;
+        $isApi = 'sylius.resource_api' !== $type;
         /** @var MetadataInterface $metadata */
         $metadata = $this->resourceRegistry->get($configuration['alias']);
         $routes = $this->routeFactory->createRouteCollection();


130) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:80    [M] Coalesce

--- Original
+++ New
@@ @@
         /** @var MetadataInterface $metadata */
         $metadata = $this->resourceRegistry->get($configuration['alias']);
         $routes = $this->routeFactory->createRouteCollection();
-        $rootPath = sprintf('/%s/', $configuration['path'] ?? Urlizer::urlize($metadata->getPluralName()));
+        $rootPath = sprintf('/%s/', Urlizer::urlize($metadata->getPluralName()));
         $identifier = sprintf('{%s}', $configuration['identifier']);
         if (in_array('index', $routesToGenerate, true)) {
             $indexRoute = $this->createRoute($metadata, $configuration, $rootPath, 'index', ['GET'], $isApi);


131) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:83    [M] TrueValue

--- Original
+++ New
@@ @@
         $routes = $this->routeFactory->createRouteCollection();
         $rootPath = sprintf('/%s/', $configuration['path'] ?? Urlizer::urlize($metadata->getPluralName()));
         $identifier = sprintf('{%s}', $configuration['identifier']);
-        if (in_array('index', $routesToGenerate, true)) {
+        if (in_array('index', $routesToGenerate, false)) {
             $indexRoute = $this->createRoute($metadata, $configuration, $rootPath, 'index', ['GET'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'index'), $indexRoute);
         }


132) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:85    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $identifier = sprintf('{%s}', $configuration['identifier']);
         if (in_array('index', $routesToGenerate, true)) {
             $indexRoute = $this->createRoute($metadata, $configuration, $rootPath, 'index', ['GET'], $isApi);
-            $routes->add($this->getRouteName($metadata, $configuration, 'index'), $indexRoute);
+            
         }
         if (in_array('create', $routesToGenerate, true)) {
             $createRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath : $rootPath . 'new', 'create', $isApi ? ['POST'] : ['GET', 'POST'], $isApi);


133) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:88    [M] TrueValue

--- Original
+++ New
@@ @@
             $indexRoute = $this->createRoute($metadata, $configuration, $rootPath, 'index', ['GET'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'index'), $indexRoute);
         }
-        if (in_array('create', $routesToGenerate, true)) {
+        if (in_array('create', $routesToGenerate, false)) {
             $createRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath : $rootPath . 'new', 'create', $isApi ? ['POST'] : ['GET', 'POST'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'create'), $createRoute);
         }


134) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:90    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         if (in_array('create', $routesToGenerate, true)) {
             $createRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath : $rootPath . 'new', 'create', $isApi ? ['POST'] : ['GET', 'POST'], $isApi);
-            $routes->add($this->getRouteName($metadata, $configuration, 'create'), $createRoute);
+            
         }
         if (in_array('update', $routesToGenerate, true)) {
             $updateRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath . $identifier : $rootPath . $identifier . '/edit', 'update', $isApi ? ['PUT', 'PATCH'] : ['GET', 'PUT', 'PATCH'], $isApi);


135) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:93    [M] TrueValue

--- Original
+++ New
@@ @@
             $createRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath : $rootPath . 'new', 'create', $isApi ? ['POST'] : ['GET', 'POST'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'create'), $createRoute);
         }
-        if (in_array('update', $routesToGenerate, true)) {
+        if (in_array('update', $routesToGenerate, false)) {
             $updateRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath . $identifier : $rootPath . $identifier . '/edit', 'update', $isApi ? ['PUT', 'PATCH'] : ['GET', 'PUT', 'PATCH'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'update'), $updateRoute);
         }


136) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:95    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         if (in_array('update', $routesToGenerate, true)) {
             $updateRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath . $identifier : $rootPath . $identifier . '/edit', 'update', $isApi ? ['PUT', 'PATCH'] : ['GET', 'PUT', 'PATCH'], $isApi);
-            $routes->add($this->getRouteName($metadata, $configuration, 'update'), $updateRoute);
+            
         }
         if (in_array('show', $routesToGenerate, true)) {
             $showRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'show', ['GET'], $isApi);


137) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:98    [M] TrueValue

--- Original
+++ New
@@ @@
             $updateRoute = $this->createRoute($metadata, $configuration, $isApi ? $rootPath . $identifier : $rootPath . $identifier . '/edit', 'update', $isApi ? ['PUT', 'PATCH'] : ['GET', 'PUT', 'PATCH'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'update'), $updateRoute);
         }
-        if (in_array('show', $routesToGenerate, true)) {
+        if (in_array('show', $routesToGenerate, false)) {
             $showRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'show', ['GET'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'show'), $showRoute);
         }


138) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:100    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         if (in_array('show', $routesToGenerate, true)) {
             $showRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'show', ['GET'], $isApi);
-            $routes->add($this->getRouteName($metadata, $configuration, 'show'), $showRoute);
+            
         }
         if (!$isApi && in_array('bulkDelete', $routesToGenerate, true)) {
             $bulkDeleteRoute = $this->createRoute($metadata, $configuration, $rootPath . 'bulk-delete', 'bulkDelete', ['DELETE'], $isApi);


139) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:103    [M] LogicalNot

--- Original
+++ New
@@ @@
             $showRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'show', ['GET'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'show'), $showRoute);
         }
-        if (!$isApi && in_array('bulkDelete', $routesToGenerate, true)) {
+        if ($isApi && in_array('bulkDelete', $routesToGenerate, true)) {
             $bulkDeleteRoute = $this->createRoute($metadata, $configuration, $rootPath . 'bulk-delete', 'bulkDelete', ['DELETE'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'bulk_delete'), $bulkDeleteRoute);
         }


140) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:103    [M] TrueValue

--- Original
+++ New
@@ @@
             $showRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'show', ['GET'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'show'), $showRoute);
         }
-        if (!$isApi && in_array('bulkDelete', $routesToGenerate, true)) {
+        if (!$isApi && in_array('bulkDelete', $routesToGenerate, false)) {
             $bulkDeleteRoute = $this->createRoute($metadata, $configuration, $rootPath . 'bulk-delete', 'bulkDelete', ['DELETE'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'bulk_delete'), $bulkDeleteRoute);
         }


141) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:103    [M] LogicalAnd

--- Original
+++ New
@@ @@
             $showRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'show', ['GET'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'show'), $showRoute);
         }
-        if (!$isApi && in_array('bulkDelete', $routesToGenerate, true)) {
+        if (!$isApi || in_array('bulkDelete', $routesToGenerate, true)) {
             $bulkDeleteRoute = $this->createRoute($metadata, $configuration, $rootPath . 'bulk-delete', 'bulkDelete', ['DELETE'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'bulk_delete'), $bulkDeleteRoute);
         }


142) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:105    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         if (!$isApi && in_array('bulkDelete', $routesToGenerate, true)) {
             $bulkDeleteRoute = $this->createRoute($metadata, $configuration, $rootPath . 'bulk-delete', 'bulkDelete', ['DELETE'], $isApi);
-            $routes->add($this->getRouteName($metadata, $configuration, 'bulk_delete'), $bulkDeleteRoute);
+            
         }
         if (in_array('delete', $routesToGenerate, true)) {
             $deleteRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'delete', ['DELETE'], $isApi);


143) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:108    [M] TrueValue

--- Original
+++ New
@@ @@
             $bulkDeleteRoute = $this->createRoute($metadata, $configuration, $rootPath . 'bulk-delete', 'bulkDelete', ['DELETE'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'bulk_delete'), $bulkDeleteRoute);
         }
-        if (in_array('delete', $routesToGenerate, true)) {
+        if (in_array('delete', $routesToGenerate, false)) {
             $deleteRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'delete', ['DELETE'], $isApi);
             $routes->add($this->getRouteName($metadata, $configuration, 'delete'), $deleteRoute);
         }


144) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:110    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         }
         if (in_array('delete', $routesToGenerate, true)) {
             $deleteRoute = $this->createRoute($metadata, $configuration, $rootPath . $identifier, 'delete', ['DELETE'], $isApi);
-            $routes->add($this->getRouteName($metadata, $configuration, 'delete'), $deleteRoute);
+            
         }
         return $routes;
     }


145) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:121    [M] Identical

--- Original
+++ New
@@ @@
      */
     public function supports($resource, $type = null) : bool
     {
-        return 'sylius.resource' === $type || 'sylius.resource_api' === $type;
+        return 'sylius.resource' !== $type || 'sylius.resource_api' === $type;
     }
     /**
      * {@inheritdoc}


146) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:121    [M] LogicalOr

--- Original
+++ New
@@ @@
      */
     public function supports($resource, $type = null) : bool
     {
-        return 'sylius.resource' === $type || 'sylius.resource_api' === $type;
+        return 'sylius.resource' === $type && 'sylius.resource_api' === $type;
     }
     /**
      * {@inheritdoc}


147) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:121    [M] Identical

--- Original
+++ New
@@ @@
      */
     public function supports($resource, $type = null) : bool
     {
-        return 'sylius.resource' === $type || 'sylius.resource_api' === $type;
+        return 'sylius.resource' === $type || 'sylius.resource_api' !== $type;
     }
     /**
      * {@inheritdoc}


148) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:156    [M] FalseValue

--- Original
+++ New
@@ @@
      *
      * @return Route
      */
-    private function createRoute(MetadataInterface $metadata, array $configuration, string $path, string $actionName, array $methods, bool $isApi = false) : Route
+    private function createRoute(MetadataInterface $metadata, array $configuration, string $path, string $actionName, array $methods, bool $isApi = true) : Route
     {
         $defaults = ['_controller' => $metadata->getServiceId('controller') . sprintf(':%sAction', $actionName)];
         if ($isApi && 'index' === $actionName) {


149) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:162    [M] Identical

--- Original
+++ New
@@ @@
     private function createRoute(MetadataInterface $metadata, array $configuration, string $path, string $actionName, array $methods, bool $isApi = false) : Route
     {
         $defaults = ['_controller' => $metadata->getServiceId('controller') . sprintf(':%sAction', $actionName)];
-        if ($isApi && 'index' === $actionName) {
+        if ($isApi && 'index' !== $actionName) {
             $defaults['_sylius']['serialization_groups'] = ['Default'];
         }
         if ($isApi && in_array($actionName, ['show', 'create', 'update'], true)) {


150) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:162    [M] LogicalAnd

--- Original
+++ New
@@ @@
     private function createRoute(MetadataInterface $metadata, array $configuration, string $path, string $actionName, array $methods, bool $isApi = false) : Route
     {
         $defaults = ['_controller' => $metadata->getServiceId('controller') . sprintf(':%sAction', $actionName)];
-        if ($isApi && 'index' === $actionName) {
+        if ($isApi || 'index' === $actionName) {
             $defaults['_sylius']['serialization_groups'] = ['Default'];
         }
         if ($isApi && in_array($actionName, ['show', 'create', 'update'], true)) {


151) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:165    [M] TrueValue

--- Original
+++ New
@@ @@
         if ($isApi && 'index' === $actionName) {
             $defaults['_sylius']['serialization_groups'] = ['Default'];
         }
-        if ($isApi && in_array($actionName, ['show', 'create', 'update'], true)) {
+        if ($isApi && in_array($actionName, ['show', 'create', 'update'], false)) {
             $defaults['_sylius']['serialization_groups'] = ['Default', 'Detailed'];
         }
         if ($isApi && 'delete' === $actionName) {


152) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:165    [M] LogicalAnd

--- Original
+++ New
@@ @@
         if ($isApi && 'index' === $actionName) {
             $defaults['_sylius']['serialization_groups'] = ['Default'];
         }
-        if ($isApi && in_array($actionName, ['show', 'create', 'update'], true)) {
+        if ($isApi || in_array($actionName, ['show', 'create', 'update'], true)) {
             $defaults['_sylius']['serialization_groups'] = ['Default', 'Detailed'];
         }
         if ($isApi && 'delete' === $actionName) {


153) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:168    [M] LogicalAnd

--- Original
+++ New
@@ @@
         if ($isApi && in_array($actionName, ['show', 'create', 'update'], true)) {
             $defaults['_sylius']['serialization_groups'] = ['Default', 'Detailed'];
         }
-        if ($isApi && 'delete' === $actionName) {
+        if ($isApi || 'delete' === $actionName) {
             $defaults['_sylius']['csrf_protection'] = false;
         }
         if (isset($configuration['grid']) && 'index' === $actionName) {


154) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:168    [M] Identical

--- Original
+++ New
@@ @@
         if ($isApi && in_array($actionName, ['show', 'create', 'update'], true)) {
             $defaults['_sylius']['serialization_groups'] = ['Default', 'Detailed'];
         }
-        if ($isApi && 'delete' === $actionName) {
+        if ($isApi && 'delete' !== $actionName) {
             $defaults['_sylius']['csrf_protection'] = false;
         }
         if (isset($configuration['grid']) && 'index' === $actionName) {


155) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:169    [M] FalseValue

--- Original
+++ New
@@ @@
             $defaults['_sylius']['serialization_groups'] = ['Default', 'Detailed'];
         }
         if ($isApi && 'delete' === $actionName) {
-            $defaults['_sylius']['csrf_protection'] = false;
+            $defaults['_sylius']['csrf_protection'] = true;
         }
         if (isset($configuration['grid']) && 'index' === $actionName) {
             $defaults['_sylius']['grid'] = $configuration['grid'];


156) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:171    [M] Identical

--- Original
+++ New
@@ @@
         if ($isApi && 'delete' === $actionName) {
             $defaults['_sylius']['csrf_protection'] = false;
         }
-        if (isset($configuration['grid']) && 'index' === $actionName) {
+        if (isset($configuration['grid']) && 'index' !== $actionName) {
             $defaults['_sylius']['grid'] = $configuration['grid'];
         }
         if (isset($configuration['form']) && in_array($actionName, ['create', 'update'], true)) {


157) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:171    [M] LogicalAnd

--- Original
+++ New
@@ @@
         if ($isApi && 'delete' === $actionName) {
             $defaults['_sylius']['csrf_protection'] = false;
         }
-        if (isset($configuration['grid']) && 'index' === $actionName) {
+        if (isset($configuration['grid']) || 'index' === $actionName) {
             $defaults['_sylius']['grid'] = $configuration['grid'];
         }
         if (isset($configuration['form']) && in_array($actionName, ['create', 'update'], true)) {


158) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:174    [M] TrueValue

--- Original
+++ New
@@ @@
         if (isset($configuration['grid']) && 'index' === $actionName) {
             $defaults['_sylius']['grid'] = $configuration['grid'];
         }
-        if (isset($configuration['form']) && in_array($actionName, ['create', 'update'], true)) {
+        if (isset($configuration['form']) && in_array($actionName, ['create', 'update'], false)) {
             $defaults['_sylius']['form'] = $configuration['form'];
         }
         if (isset($configuration['serialization_version'])) {


159) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:174    [M] LogicalAnd

--- Original
+++ New
@@ @@
         if (isset($configuration['grid']) && 'index' === $actionName) {
             $defaults['_sylius']['grid'] = $configuration['grid'];
         }
-        if (isset($configuration['form']) && in_array($actionName, ['create', 'update'], true)) {
+        if (isset($configuration['form']) || in_array($actionName, ['create', 'update'], true)) {
             $defaults['_sylius']['form'] = $configuration['form'];
         }
         if (isset($configuration['serialization_version'])) {


160) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:183    [M] LogicalNot

--- Original
+++ New
@@ @@
         if (isset($configuration['section'])) {
             $defaults['_sylius']['section'] = $configuration['section'];
         }
-        if (!empty($configuration['criteria'])) {
+        if (empty($configuration['criteria'])) {
             $defaults['_sylius']['criteria'] = $configuration['criteria'];
         }
         if (array_key_exists('filterable', $configuration)) {


161) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:189    [M] TrueValue

--- Original
+++ New
@@ @@
         if (array_key_exists('filterable', $configuration)) {
             $defaults['_sylius']['filterable'] = $configuration['filterable'];
         }
-        if (isset($configuration['templates']) && in_array($actionName, ['show', 'index', 'create', 'update'], true)) {
+        if (isset($configuration['templates']) && in_array($actionName, ['show', 'index', 'create', 'update'], false)) {
             $defaults['_sylius']['template'] = sprintf('%s/%s.html.twig', $configuration['templates'], $actionName);
         }
         if (isset($configuration['redirect']) && in_array($actionName, ['create', 'update'], true)) {


162) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:189    [M] LogicalAnd

--- Original
+++ New
@@ @@
         if (array_key_exists('filterable', $configuration)) {
             $defaults['_sylius']['filterable'] = $configuration['filterable'];
         }
-        if (isset($configuration['templates']) && in_array($actionName, ['show', 'index', 'create', 'update'], true)) {
+        if (isset($configuration['templates']) || in_array($actionName, ['show', 'index', 'create', 'update'], true)) {
             $defaults['_sylius']['template'] = sprintf('%s/%s.html.twig', $configuration['templates'], $actionName);
         }
         if (isset($configuration['redirect']) && in_array($actionName, ['create', 'update'], true)) {


163) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:192    [M] TrueValue

--- Original
+++ New
@@ @@
         if (isset($configuration['templates']) && in_array($actionName, ['show', 'index', 'create', 'update'], true)) {
             $defaults['_sylius']['template'] = sprintf('%s/%s.html.twig', $configuration['templates'], $actionName);
         }
-        if (isset($configuration['redirect']) && in_array($actionName, ['create', 'update'], true)) {
+        if (isset($configuration['redirect']) && in_array($actionName, ['create', 'update'], false)) {
             $defaults['_sylius']['redirect'] = $this->getRouteName($metadata, $configuration, $configuration['redirect']);
         }
         if (isset($configuration['permission'])) {


164) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:192    [M] LogicalAnd

--- Original
+++ New
@@ @@
         if (isset($configuration['templates']) && in_array($actionName, ['show', 'index', 'create', 'update'], true)) {
             $defaults['_sylius']['template'] = sprintf('%s/%s.html.twig', $configuration['templates'], $actionName);
         }
-        if (isset($configuration['redirect']) && in_array($actionName, ['create', 'update'], true)) {
+        if (isset($configuration['redirect']) || in_array($actionName, ['create', 'update'], true)) {
             $defaults['_sylius']['redirect'] = $this->getRouteName($metadata, $configuration, $configuration['redirect']);
         }
         if (isset($configuration['permission'])) {


165) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:203    [M] Coalesce

--- Original
+++ New
@@ @@
             $defaults['_sylius']['vars'] = $configuration['vars']['all'];
         }
         if (isset($configuration['vars'][$actionName])) {
-            $vars = $configuration['vars']['all'] ?? [];
+            $vars = [];
             $defaults['_sylius']['vars'] = array_merge($vars, $configuration['vars'][$actionName]);
         }
         if ('bulkDelete' === $actionName) {


166) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:207    [M] Identical

--- Original
+++ New
@@ @@
             $vars = $configuration['vars']['all'] ?? [];
             $defaults['_sylius']['vars'] = array_merge($vars, $configuration['vars'][$actionName]);
         }
-        if ('bulkDelete' === $actionName) {
+        if ('bulkDelete' !== $actionName) {
             $defaults['_sylius']['paginate'] = false;
             $defaults['_sylius']['repository'] = ['method' => 'findById', 'arguments' => ['$ids']];
         }


167) /home/loic/www/others/symfony-starter/src/Routing/ResourceLoader.php:208    [M] FalseValue

--- Original
+++ New
@@ @@
             $defaults['_sylius']['vars'] = array_merge($vars, $configuration['vars'][$actionName]);
         }
         if ('bulkDelete' === $actionName) {
-            $defaults['_sylius']['paginate'] = false;
+            $defaults['_sylius']['paginate'] = true;
             $defaults['_sylius']['repository'] = ['method' => 'findById', 'arguments' => ['$ids']];
         }
         return $this->routeFactory->createRoute($path, $defaults, [], [], '', [], $methods);


168) /home/loic/www/others/symfony-starter/src/Validator/Initializer/CustomerInitializer.php:43    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         if ($object instanceof CustomerInterface) {
             $emailCanonical = $this->canonicalizer->canonicalize($object->getEmail());
-            $object->setEmailCanonical($emailCanonical);
+            
         }
     }
 }


169) /home/loic/www/others/symfony-starter/src/View/FoundationTranslatedView.php:35    [M] FunctionCall

--- Original
+++ New
@@ @@
     }
     protected function buildPreviousMessage($text)
     {
-        return sprintf('%s', $text);
+        sprintf('%s', $text);
+        return null;
     }
     protected function buildNextMessage($text)
     {

170) /home/loic/www/others/symfony-starter/src/View/FoundationTranslatedView.php:40    [M] FunctionCall

--- Original
+++ New
@@ @@
     }
     protected function buildNextMessage($text)
     {
-        return sprintf('%s', $text);
+        sprintf('%s', $text);
+        return null;
     }
     /**
      * {@inheritdoc}

171) /home/loic/www/others/symfony-starter/src/View/FoundationView.php:30    [M] NewObject

--- Original
+++ New
@@ @@
 {
     protected function createDefaultTemplate()
     {
-        return new FoundationTemplate();
+        new FoundationTemplate();
+        return null;
     }
     protected function getDefaultProximity()
     {

172) /home/loic/www/others/symfony-starter/src/View/FoundationView.php:35    [M] DecrementInteger

--- Original
+++ New
@@ @@
     }
     protected function getDefaultProximity()
     {
-        return 3;
+        return 2;
     }
     /**
      * {@inheritdoc}


173) /home/loic/www/others/symfony-starter/src/View/FoundationView.php:35    [M] IncrementInteger

--- Original
+++ New
@@ @@
     }
     protected function getDefaultProximity()
     {
-        return 3;
+        return 4;
     }
     /**
      * {@inheritdoc}


174) /home/loic/www/others/symfony-starter/src/View/FoundationView.php:35    [M] IntegerNegation

--- Original
+++ New
@@ @@
     }
     protected function getDefaultProximity()
     {
-        return 3;
+        return -3;
     }
     /**
      * {@inheritdoc}


175) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:36    [M] FunctionCall

--- Original
+++ New
@@ @@
      */
     public function container()
     {
-        return sprintf('<ul class="%s" role="navigation" aria-label="Pagination">%%pages%%</ul>', $this->option('css_container_class'));
+        sprintf('<ul class="%s" role="navigation" aria-label="Pagination">%%pages%%</ul>', $this->option('css_container_class'));
+        return null;
     }
     /**
      * @param int $page

176) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:74    [M] PublicVisibility

--- Original
+++ New
@@ @@
      *
      * @return string
      */
-    public function pageWithTextAndClass($page, $text, $class)
+    protected function pageWithTextAndClass($page, $text, $class)
     {
         $href = $this->generateRoute($page);
         return $this->linkLi($class, $href, $text);


177) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:95    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return string
      */
-    public function previousDisabledClass()
+    protected function previousDisabledClass()
     {
         return $this->option('css_prev_class') . ' ' . $this->option('css_disabled_class');
     }


178) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:127    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return string
      */
-    public function nextDisabledClass()
+    protected function nextDisabledClass()
     {
         return $this->option('css_next_class') . ' ' . $this->option('css_disabled_class');
     }


179) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:150    [M] OneZeroInteger

--- Original
+++ New
@@ @@
      */
     public function first()
     {
-        return $this->page(1);
+        return $this->page(0);
     }
     /**
      * @param int $page


180) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:150    [M] IncrementInteger

--- Original
+++ New
@@ @@
      */
     public function first()
     {
-        return $this->page(1);
+        return $this->page(2);
     }
     /**
      * @param int $page


181) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:195    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
      *
      * @return string
      */
-    protected function linkLi($class, $href, $text)
+    private function linkLi($class, $href, $text)
     {
         $liClass = $class ? sprintf(' class="%s"', $class) : '';
         return sprintf('<li%s><a href="%s">%s</a></li>', $liClass, $href, $text);


182) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:199    [M] FunctionCall

--- Original
+++ New
@@ @@
     protected function linkLi($class, $href, $text)
     {
         $liClass = $class ? sprintf(' class="%s"', $class) : '';
-        return sprintf('<li%s><a href="%s">%s</a></li>', $liClass, $href, $text);
+        sprintf('<li%s><a href="%s">%s</a></li>', $liClass, $href, $text);
+        return null;
     }
     /**
      * @param string $class

183) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:208    [M] ProtectedVisibility

--- Original
+++ New
@@ @@
      *
      * @return string
      */
-    protected function spanLi($class, $text)
+    private function spanLi($class, $text)
     {
         $liClass = $class ? sprintf(' class="%s"', $class) : '';
         return sprintf('<li%s><span>%s</span></li>', $liClass, $text);
     }

184) /home/loic/www/others/symfony-starter/src/View/Template/FoundationTemplate.php:212    [M] FunctionCall

--- Original
+++ New
@@ @@
     protected function spanLi($class, $text)
     {
         $liClass = $class ? sprintf(' class="%s"', $class) : '';
-        return sprintf('<li%s><span>%s</span></li>', $liClass, $text);
+        sprintf('<li%s><span>%s</span></li>', $liClass, $text);
+        return null;
     }
 }
